Android打包机密码:sy
IOS打包机密码:xml123

记录当前版本:
v2:版本4.3
马甲:版本4.3
develop:不知道不管
完整出包流程:
1.new-branch 选中拉取分支  把Unity工程拉取到指定目录
2.gen-ab 选中生成ab的分支  生成ios和安卓的ab资源
3.gen-zip 选中生成压缩文件的分支 生成ios和安装的ab压缩资源 
(相对路径 data/zip-out/ios/zip-ab)
4.压缩zip-ab文件夹并发送给mac打包机
-- mac打包机操作
5.复制zip-ab并解压到工程指定目录(这里应该是mac的zip-ab的位置)
6.mac打包机的new-brach 选择拉取的分支把Unity共工程拉到指定目录(Unity指定目录待会看)
7.export_ios 选择分支，导出ios工程
8.打开ios工程修改包名,证书,修改param-config 控制游戏的在线参数,
9.修改ck文件夹下xgame.json中对应参数，和付费有关的控制参数.
10.添加阿里云视频SDK

------------------------------如果有需要更新代码AB的话-------------------
1.打AB出来后上传到OSS服务器，然后修改在线参数
2.打代码包前需要手动提一个版本，上传到OSS服务器，在修改在线参数，跟热更流程一样。
3.如果只打包，对这些没有任何操作，那么这个包只是一个包...新的东西全部不在里头


(以后看看能不能调整下出包方式，不够自动化???)
(貌似其中有个Bug，好像是说如果传过来出异常报错的话，需要手动拉取在刷新下)
一键出包流程：
1.首先去Android打包机上,编辑onekey_zip.bat文件，选择好需要设定的参数然后开始运行并打包
2.确定mac打包机上socket连接打开，确定需求判断是否需要修改icon/param_config/xgame.json，如果有需要则找到other下修改
3.等待打包机打完，发送条消息到mac打包机上，去找p3project文件下对应分支的xcode工程
4.打开编辑ios工程，修改包名，证书，检查param-config/xgame.json文件是否修改正确，添加阿里云sdk文件 然后导出



发布正式包的流程：
到xcode确定编译没有问题走到发布，选择第一个发布到Appstrop 
2.选第二个
3.不勾选
4.选择证书
5.发布
更换SDK和更换证书
(目前都tm是未知，慢慢踩坑)

现在已知的线上参数:
ios_0001.json(线上使用的) ios_0002.json(更新或者提审) ios_0003.json(马甲)

已知遇到的坑:
1.自动化脚本的问题(时常需要自己手动copy一份ab资源过来，实际上跟手动流程差不多)
2.Unity如果遇到构建报错问题，记得先在MAC上手动运行下，检查是否因为破解失败等原因导致Unity部分功能无法正常使用
3.导入证书前，先把包名写好(写完按回车)
4.接入新证书，可以是需要数字签名，一般都是会跟证书一起，记得双击使用
5.目前打新包换新证书和SDK不知道是否跟签名有关系，用老证书是可行的，换新证书就不行，一脸郁闷。
6.当前项目换SDK资源的时候，先提前确定需不需要重新接代码，然后替换SDK资源前记得把以前旧的需要替换的SDK资源删除，否正会有影响
7.遇到打AB一下就打好了的情况，先确定，打AB文件夹是否为空，如果为空确定命令行报错问题。
8.如果走整套打包流程，需要手动把各种参数找到对应的在Xcode工程里的文件相对应的都改了，比如sdk的配置参数,项目配置参数等等
9.如果走手动的一套流程，换Icon资源时，需要调整cp.sh的脚本，设置自己想要copy的东西过去
10.打包遇到Build Failed 的话 记得看错误log，如果有关连接问题 请打开Unity看看是否正常登陆...... 否则一切都是删除原先在Mac里头的工程重新拉一遍
